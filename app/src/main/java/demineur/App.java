/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demineur;

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class App {
    private static SettingsPanel settingsPanel;
    private static MainMenuPanel mainMenuPanel;

    public static JFrame mainWindow = new JFrame("Démineur");

    public static void main(String[] args) {
        
        // Set cross-platform Java L&F (also called "Metal")
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        mainMenuPanel = new MainMenuPanel();
        settingsPanel = new SettingsPanel();
        
        // schedule this for the event dispatch thread (edt)
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {

                //innit components
                mainWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                mainWindow.setMinimumSize(new Dimension(500, 500));
                //set fullscreen if last saved
                if ("Plein écran".equals(settingsPanel.settings.get("displayMode", "Fenêtre"))) {
                    System.out.println("flscrn");
                    GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices()[0].setFullScreenWindow(mainWindow);
                } else {
                    System.out.println("windwd");
                    mainWindow.pack();
                }
                mainWindow.setVisible(true);


                displayMainWindow();

            }
        });
    }

    public static void displayMainWindow() {

        mainWindow.setContentPane(mainMenuPanel);
        mainWindow.revalidate();
        mainWindow.repaint();

    }
    
    public static void displaySettingsWindow() {
        
        mainWindow.setContentPane(settingsPanel);
        mainWindow.revalidate();
        mainWindow.repaint();

    }
}
